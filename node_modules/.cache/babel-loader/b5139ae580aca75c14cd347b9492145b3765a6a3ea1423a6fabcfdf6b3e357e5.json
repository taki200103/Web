{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Web\\\\src\\\\group\\\\ChatTab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, List, ListItem, ListItemText, Typography, Divider, TextField, Button } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatTab = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    // Fetch messages from the server\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    // Implement your fetchMessages logic here\n  };\n  const handleSendMessage = async () => {\n    // Implement your handleSendMessage logic here\n  };\n  const formatTime = (date, time) => {\n    if (!date || !time) return '';\n    const formattedDate = new Date(date).toLocaleDateString('vi-VN');\n    return `${formattedDate} ${time.substring(0, 5)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      backgroundColor: '#fff',\n      border: '1px solid #e0e0e0',\n      borderRadius: '10px',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        overflowY: 'auto',\n        p: 2,\n        backgroundColor: '#fff',\n        '&::-webkit-scrollbar': {\n          width: '8px'\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: '#f5f5f5'\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: '#888',\n          borderRadius: '4px'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          color: \"textSecondary\",\n          children: \"Ch\\u01B0a c\\xF3 tin nh\\u1EAFn n\\xE0o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body1\",\n                color: \"text.primary\",\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: msg.user_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: msg.note\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  sx: {\n                    display: 'block',\n                    mt: 0.5\n                  },\n                  children: formatTime(msg.chat_date, msg.chat_time)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, msg.chat_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        backgroundColor: '#1976d2',\n        // Màu xanh đậm\n        display: 'flex',\n        gap: 1,\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyPress: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSendMessage();\n          }\n        },\n        size: \"small\",\n        sx: {\n          backgroundColor: '#fff',\n          '& .MuiOutlinedInput-root': {\n            borderRadius: '4px',\n            '& fieldset': {\n              borderColor: 'transparent'\n            },\n            '&:hover fieldset': {\n              borderColor: 'transparent'\n            },\n            '&.Mui-focused fieldset': {\n              borderColor: 'transparent'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 20\n        }, this),\n        onClick: handleSendMessage,\n        disabled: !newMessage.trim(),\n        sx: {\n          borderRadius: '4px',\n          minWidth: '100px',\n          backgroundColor: '#fff',\n          color: '#1976d2',\n          '&:hover': {\n            backgroundColor: '#f5f5f5'\n          }\n        },\n        children: \"G\\u1EEDi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatTab, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = ChatTab;\nexport default ChatTab;\nvar _c;\n$RefreshReg$(_c, \"ChatTab\");","map":{"version":3,"names":["React","useEffect","useState","Box","List","ListItem","ListItemText","Typography","Divider","TextField","Button","SendIcon","jsxDEV","_jsxDEV","ChatTab","_s","messages","setMessages","newMessage","setNewMessage","fetchMessages","handleSendMessage","formatTime","date","time","formattedDate","Date","toLocaleDateString","substring","sx","display","flexDirection","height","backgroundColor","border","borderRadius","overflow","children","flex","overflowY","p","width","length","align","color","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","Fragment","alignItems","primary","component","variant","fontWeight","user_name","secondary","note","mt","chat_date","chat_time","chat_id","gap","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","size","borderColor","endIcon","onClick","disabled","trim","minWidth","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/Web/src/group/ChatTab.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, List, ListItem, ListItemText, Typography, Divider, TextField, Button } from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nconst ChatTab = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch messages from the server\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const fetchMessages = async () => {\r\n    // Implement your fetchMessages logic here\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    // Implement your handleSendMessage logic here\r\n  };\r\n\r\n  const formatTime = (date, time) => {\r\n    if (!date || !time) return '';\r\n    const formattedDate = new Date(date).toLocaleDateString('vi-VN');\r\n    return `${formattedDate} ${time.substring(0, 5)}`;\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%',\r\n      backgroundColor: '#fff',\r\n      border: '1px solid #e0e0e0',\r\n      borderRadius: '10px',\r\n      overflow: 'hidden'\r\n    }}>\r\n      {/* Khu vực hiển thị tin nhắn */}\r\n      <Box sx={{ \r\n        flex: 1,\r\n        overflowY: 'auto',\r\n        p: 2,\r\n        backgroundColor: '#fff',\r\n        '&::-webkit-scrollbar': {\r\n          width: '8px'\r\n        },\r\n        '&::-webkit-scrollbar-track': {\r\n          backgroundColor: '#f5f5f5'\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n          backgroundColor: '#888',\r\n          borderRadius: '4px'\r\n        }\r\n      }}>\r\n        <List>\r\n          {messages.length === 0 ? (\r\n            <Typography align=\"center\" color=\"textSecondary\">\r\n              Chưa có tin nhắn nào\r\n            </Typography>\r\n          ) : (\r\n            messages.map((msg) => (\r\n              <React.Fragment key={msg.chat_id}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body1\"\r\n                        color=\"text.primary\"\r\n                        sx={{ fontWeight: 'bold' }}\r\n                      >\r\n                        {msg.user_name}\r\n                      </Typography>\r\n                    }\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"text.primary\"\r\n                        >\r\n                          {msg.note}\r\n                        </Typography>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"caption\"\r\n                          color=\"text.secondary\"\r\n                          sx={{ display: 'block', mt: 0.5 }}\r\n                        >\r\n                          {formatTime(msg.chat_date, msg.chat_time)}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Divider component=\"li\" />\r\n              </React.Fragment>\r\n            ))\r\n          )}\r\n        </List>\r\n      </Box>\r\n\r\n      {/* Khu vực nhập tin nhắn */}\r\n      <Box sx={{ \r\n        p: 2,\r\n        backgroundColor: '#1976d2', // Màu xanh đậm\r\n        display: 'flex',\r\n        gap: 1,\r\n        alignItems: 'center'\r\n      }}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Nhập tin nhắn...\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          onKeyPress={(e) => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n              e.preventDefault();\r\n              handleSendMessage();\r\n            }\r\n          }}\r\n          size=\"small\"\r\n          sx={{\r\n            backgroundColor: '#fff',\r\n            '& .MuiOutlinedInput-root': {\r\n              borderRadius: '4px',\r\n              '& fieldset': {\r\n                borderColor: 'transparent'\r\n              },\r\n              '&:hover fieldset': {\r\n                borderColor: 'transparent'\r\n              },\r\n              '&.Mui-focused fieldset': {\r\n                borderColor: 'transparent'\r\n              }\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          endIcon={<SendIcon />}\r\n          onClick={handleSendMessage}\r\n          disabled={!newMessage.trim()}\r\n          sx={{\r\n            borderRadius: '4px',\r\n            minWidth: '100px',\r\n            backgroundColor: '#fff',\r\n            color: '#1976d2',\r\n            '&:hover': {\r\n              backgroundColor: '#f5f5f5'\r\n            }\r\n          }}\r\n        >\r\n          Gửi\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatTab; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}