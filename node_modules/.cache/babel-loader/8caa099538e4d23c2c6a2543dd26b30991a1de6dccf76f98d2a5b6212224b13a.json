{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3000/api'\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\napi.getUserTasks = async () => {\n  try {\n    const response = await api.get('/tasks/user-tasks');\n    return response.data.tasks;\n  } catch (error) {\n    throw error;\n  }\n};\napi.getTasksByType = async (taskTypeId = null) => {\n  try {\n    const endpoint = taskTypeId ? `/tasks/type/${taskTypeId}` : '/tasks/type';\n    const response = await api.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\napi.getAllTasks = async () => {\n  try {\n    const response = await axios.get('/api/tasks/user-tasks');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","getUserTasks","response","get","data","tasks","error","getTasksByType","taskTypeId","endpoint","console","getAllTasks"],"sources":["C:/Web/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3000/api'\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('authToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\napi.getUserTasks = async () => {\r\n  try {\r\n    const response = await api.get('/tasks/user-tasks');\r\n    return response.data.tasks;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\napi.getTasksByType = async (taskTypeId = null) => {\r\n  try {\r\n    const endpoint = taskTypeId \r\n      ? `/tasks/type/${taskTypeId}`\r\n      : '/tasks/type';\r\n    const response = await api.get(endpoint);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching tasks:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\napi.getAllTasks = async () => {\r\n  try {\r\n    const response = await axios.get('/api/tasks/user-tasks');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching tasks:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEFN,GAAG,CAACY,YAAY,GAAG,YAAY;EAC7B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAOD,QAAQ,CAACE,IAAI,CAACC,KAAK;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAEDjB,GAAG,CAACkB,cAAc,GAAG,OAAOC,UAAU,GAAG,IAAI,KAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAGD,UAAU,GACvB,eAAeA,UAAU,EAAE,GAC3B,aAAa;IACjB,MAAMN,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAACM,QAAQ,CAAC;IACxC,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdI,OAAO,CAACJ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAEDjB,GAAG,CAACsB,WAAW,GAAG,YAAY;EAC5B,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,uBAAuB,CAAC;IACzD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdI,OAAO,CAACJ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}